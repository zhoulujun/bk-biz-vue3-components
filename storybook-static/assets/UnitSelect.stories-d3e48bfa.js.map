{"version":3,"file":"UnitSelect.stories-d3e48bfa.js","sources":["../../src/utils/formats/symbolFormatters.ts","../../src/utils/formats/valueFormats.ts","../../src/utils/formats/arithmeticFormatters.ts","../../src/utils/formats/categories.ts","../../src/components/unit-select/index.tsx","../../src/stories/UnitSelect.stories.mdx"],"sourcesContent":["import { scaledUnits, ValueFormatter } from './valueFormats';\nimport { DecimalCount } from './types/displayValue';\n\nexport function currency(symbol: string, asSuffix?: boolean): ValueFormatter {\n  const units = ['', 'K', 'M', 'B', 'T'];\n  const scaler = scaledUnits(1000, units);\n  return (size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) => {\n    if (size === null) {\n      return { text: '' };\n    }\n    const scaled = scaler(size, decimals, scaledDecimals);\n    if (asSuffix) {\n      scaled.suffix = symbol;\n    } else {\n      scaled.prefix = symbol;\n    }\n    return scaled;\n  };\n}\n\nexport function getOffsetFromSIPrefix(c: string): number {\n  switch (c) {\n    case 'f':\n      return -5;\n    case 'p':\n      return -4;\n    case 'n':\n      return -3;\n    case 'μ': // Two different unicode chars for µ\n    case 'µ':\n      return -2;\n    case 'm':\n      return -1;\n    case '':\n      return 0;\n    case 'k':\n      return 1;\n    case 'M':\n      return 2;\n    case 'G':\n      return 3;\n    case 'T':\n      return 4;\n    case 'P':\n      return 5;\n    case 'E':\n      return 6;\n    case 'Z':\n      return 7;\n    case 'Y':\n      return 8;\n  }\n  return 0;\n}\n\nexport function binarySIPrefix(unit: string, offset = 0): ValueFormatter {\n  const prefixes = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'].slice(offset);\n  const units = prefixes.map((p) => {\n    return ` ${p}${unit}`;\n  });\n  return scaledUnits(1024, units);\n}\n\nexport function decimalSIPrefix(unit: string, offset = 0): ValueFormatter {\n  let prefixes = ['f', 'p', 'n', 'µ', 'm', '', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n  prefixes = prefixes.slice(5 + (offset || 0));\n  const units = prefixes.map((p) => {\n    return ` ${p}${unit}`;\n  });\n  return scaledUnits(1000, units);\n}\n","import { getCategories } from './categories';\nimport { DecimalCount } from './types/displayValue';\nimport { getOffsetFromSIPrefix, decimalSIPrefix, currency } from './symbolFormatters';\nimport { TimeZone } from '@/components/time-range/utils';\n\nexport interface UnitCustom {\n  choice: string[],\n  custom: string\n}\nexport interface FormattedValue {\n  text: string;\n  prefix?: string;\n  suffix?: string;\n}\nexport function booleanValueFormatter(t: string, f: string): ValueFormatter {\n  return (value: any) => ({ text: value ? t : f });\n}\n\nexport function formattedValueToString(val: FormattedValue): string {\n  return `${val.prefix ?? ''}${val.text}${val.suffix ?? ''}`;\n}\n\nexport type ValueFormatter = (\n  value: number,\n  decimals?: DecimalCount,\n  scaledDecimals?: DecimalCount,\n  timeZone?: TimeZone\n) => FormattedValue;\n\nexport interface ValueFormat {\n  name: string;\n  id: string;\n  fn: ValueFormatter;\n}\n\nexport interface ValueFormatCategory {\n  id?: string,\n  name: string;\n  formats: ValueFormat[];\n}\n\ninterface ValueFormatterIndex {\n  [id: string]: ValueFormatter;\n}\n\n// Globals & formats cache\nlet categories: ValueFormatCategory[] = [];\nconst index: ValueFormatterIndex = {};\nlet hasBuiltIndex = false;\n\nexport function toFixed(value: number, decimals?: DecimalCount): string {\n  if (value === null) {\n    return '';\n  }\n  if (value === Number.NEGATIVE_INFINITY || value === Number.POSITIVE_INFINITY) {\n    return value.toLocaleString();\n  }\n\n  // eslint-disable-next-line no-restricted-properties\n  const factor = decimals ? Math.pow(10, Math.max(0, decimals)) : 1;\n  const formatted = String(Math.round(value * factor) / factor);\n\n  // if exponent return directly\n  if (formatted.indexOf('e') !== -1 || value === 0) {\n    return formatted;\n  }\n\n  // If tickDecimals was specified, ensure that we have exactly that\n  // much precision; otherwise default to the value's own precision.\n  if (![null, undefined].includes(decimals)) {\n    const decimalPos = formatted.indexOf('.');\n    const precision = decimalPos === -1 ? 0 : formatted.length - decimalPos - 1;\n    if (precision < decimals) {\n      return (precision ? formatted : `${formatted}.`) + String(factor).substr(1, decimals - precision);\n    }\n  }\n\n  return formatted;\n}\n\nexport function toFixedScaled(\n  value: number,\n  decimals: DecimalCount,\n  scaledDecimals: DecimalCount,\n  additionalDecimals: number,\n  ext?: string,\n): FormattedValue {\n  if (scaledDecimals === null || scaledDecimals === undefined) {\n    return { text: toFixed(value, decimals), suffix: ext };\n  }\n  return {\n    text: toFixed(value, scaledDecimals + additionalDecimals),\n    suffix: ext,\n  };\n}\n\nexport function toFixedUnit(unit: string, asPrefix?: boolean): ValueFormatter {\n  return (size: number, decimals?: DecimalCount) => {\n    if (size === null || size === undefined) {\n      return { text: '' };\n    }\n    const text: number|string = [null, undefined].includes(decimals) ? String(size) : toFixed(size, decimals);\n    if (unit) {\n      if (asPrefix) {\n        return { text, prefix: unit };\n      }\n      return { text, suffix: ` ${unit}` };\n    }\n    return { text };\n  };\n}\n\n// Formatter which scales the unit string geometrically according to the given\n// numeric factor. Repeatedly scales the value down by the factor until it is\n// less than the factor in magnitude, or the end of the array is reached.\nexport function scaledUnits(factor: number, extArray: string[]): ValueFormatter {\n  return (size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) => {\n    if ([null, undefined].includes(size)) {\n      return { text: '' };\n    }\n    if (size === Number.NEGATIVE_INFINITY || size === Number.POSITIVE_INFINITY || isNaN(size)) {\n      return { text: size.toLocaleString() };\n    }\n\n    let steps = 0;\n    const limit = extArray.length;\n\n    while (Math.abs(size) >= factor) {\n      // eslint-disable-next-line no-plusplus\n      steps++;\n      size /= factor;\n\n      if (steps >= limit) {\n        return { text: 'NA' };\n      }\n    }\n\n    if (steps > 0 && scaledDecimals !== null && scaledDecimals !== undefined) {\n      decimals = scaledDecimals + 3 * steps;\n    }\n\n    return { text: toFixed(size, decimals), suffix: extArray[steps] };\n  };\n}\n\nexport function locale(value: number, decimals: DecimalCount): FormattedValue {\n  if ([null, undefined].includes(value)) {\n    return { text: '' };\n  }\n  return {\n    text: value.toLocaleString(undefined, { maximumFractionDigits: decimals as number }),\n  };\n}\n\nexport function simpleCountUnit(symbol: string): ValueFormatter {\n  const units = ['', 'K', 'M', 'B', 'T'];\n  const scaler = scaledUnits(1000, units);\n  return (size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) => {\n    if (size === null) {\n      return { text: '' };\n    }\n    const v = scaler(size, decimals, scaledDecimals);\n    v.suffix += ` ${symbol}`;\n    return v;\n  };\n}\n\nfunction buildFormats() {\n  categories = getCategories();\n\n  for (const cat of categories) {\n    for (const format of cat.formats) {\n      index[format.id] = format.fn;\n    }\n  }\n\n  // Resolve units pointing to old IDs\n  [{ from: 'farenheit', to: 'fahrenheit' }].forEach((alias) => {\n    const f = index[alias.to];\n    if (f) {\n      index[alias.from] = f;\n    }\n  });\n\n  hasBuiltIndex = true;\n}\n\nexport function getValueFormat(id: string): ValueFormatter {\n  if (!hasBuiltIndex) {\n    buildFormats();\n  }\n\n  const fmt = index[id];\n  if (!fmt && id) {\n    const idx = id.indexOf(':');\n    if (idx > 0) {\n      const key = id.substring(0, idx);\n      const sub = id.substring(idx + 1);\n      if (key === 'prefix') {\n        return toFixedUnit(sub, true);\n      }\n      if (key === 'si') {\n        const offset = getOffsetFromSIPrefix(sub.charAt(0));\n        const unit = offset === 0 ? sub : sub.substring(1);\n        return decimalSIPrefix(unit, offset);\n      }\n      if (key === 'count') {\n        return simpleCountUnit(sub);\n      }\n      if (key === 'currency') {\n        return currency(sub);\n      }\n    }\n    return toFixedUnit(id);\n  }\n  return fmt;\n}\n\nexport function getValueFormatterIndex(): ValueFormatterIndex {\n  if (!hasBuiltIndex) {\n    buildFormats();\n  }\n\n  return index;\n}\n\nexport function getValueFormats() {\n  if (!hasBuiltIndex) {\n    buildFormats();\n  }\n\n  return categories.map((cat) => {\n    return {\n      text: cat.name,\n      submenu: cat.formats.map((format) => {\n        return {\n          text: format.name,\n          value: format.id,\n        };\n      }),\n    };\n  });\n}\n","import { toFixed, FormattedValue } from './valueFormats';\nimport { DecimalCount } from './types/displayValue';\n\nexport function toPercent(size: number, decimals: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n  return { text: toFixed(size, decimals), suffix: '%' };\n}\n\nexport function toPercentUnit(size: number, decimals: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n  return { text: toFixed(100 * size, decimals), suffix: '%' };\n}\n\nexport function toHex0x(value: number, decimals: DecimalCount): FormattedValue {\n  if (value === null || value === undefined) {\n    return { text: '' };\n  }\n  const asHex = toHex(value, decimals);\n  if (asHex.text.substring(0, 1) === '-') {\n    asHex.text = `-0x${asHex.text.substring(1)}`;\n  } else {\n    asHex.text = `0x${asHex.text}`;\n  }\n  return asHex;\n}\n\nexport function toHex(value: number, decimals: DecimalCount): FormattedValue {\n  if (value === null || value === undefined) {\n    return { text: '' };\n  }\n  return {\n    text: parseFloat(toFixed(value, decimals))\n      .toString(16)\n      .toUpperCase(),\n  };\n}\n\nexport function sci(value: number, decimals: DecimalCount): FormattedValue {\n  if (value === null || value === undefined) {\n    return { text: '' };\n  }\n  return { text: value.toExponential(decimals as number) };\n}\n","import {\n  locale,\n  scaledUnits,\n  simpleCountUnit,\n  toFixedUnit,\n  ValueFormatCategory,\n  booleanValueFormatter,\n} from './valueFormats';\n\nimport { toHex, sci, toHex0x, toPercent, toPercentUnit } from './arithmeticFormatters';\nimport { binarySIPrefix, currency, decimalSIPrefix } from './symbolFormatters';\n\nexport const getCategories = (): ValueFormatCategory[] => [\n  {\n    id: 'custom',\n    name: ('自定义'),\n    formats: [],\n  },\n  {\n    id: 'Misc',\n    name: '基础',\n    formats: [\n      { name: '不处理', id: 'none', fn: toFixedUnit('') },\n      {\n        name: '缩略',\n        id: 'short',\n        fn: scaledUnits(1000, ['', ' K', ' Mil', ' Bil', ' Tri', ' Quadr', ' Quint', ' Sext', ' Sept']),\n      },\n      { name: '百分比 (0-100)', id: 'percent', fn: toPercent },\n      { name: '百分比 (0.0-1.0)', id: 'percentunit', fn: toPercentUnit },\n      { name: 'Humidity (%H)', id: 'humidity', fn: toFixedUnit('%H') },\n      { name: 'decibel', id: 'dB', fn: toFixedUnit('dB') },\n      { name: 'hexadecimal (0x)', id: 'hex0x', fn: toHex0x },\n      { name: 'hexadecimal', id: 'hex', fn: toHex },\n      { name: 'scientific notation', id: 'sci', fn: sci },\n      { name: 'locale format', id: 'locale', fn: locale },\n      { name: '像素', id: 'pixel', fn: toFixedUnit('px') },\n    ],\n  },\n  {\n    id: 'Acceleration',\n    name: ('加速度'),\n    formats: [\n      { name: 'Meters/sec²', id: 'accMS2', fn: toFixedUnit('m/sec²') },\n      { name: 'Feet/sec²', id: 'accFS2', fn: toFixedUnit('f/sec²') },\n      { name: 'G unit', id: 'accG', fn: toFixedUnit('g') },\n    ],\n  },\n  {\n    id: 'Angle',\n    name: ('角度'),\n    formats: [\n      { name: 'Degrees (°)', id: 'degree', fn: toFixedUnit('°') },\n      { name: 'Radians', id: 'radian', fn: toFixedUnit('rad') },\n      { name: 'Gradian', id: 'grad', fn: toFixedUnit('grad') },\n      { name: 'Arc Minutes', id: 'arcmin', fn: toFixedUnit('arcmin') },\n      { name: 'Arc Seconds', id: 'arcsec', fn: toFixedUnit('arcsec') },\n    ],\n  },\n  {\n    id: 'Area',\n    name: ('面积'),\n    formats: [\n      { name: 'Square Meters (m²)', id: 'areaM2', fn: toFixedUnit('m²') },\n      { name: 'Square Feet (ft²)', id: 'areaF2', fn: toFixedUnit('ft²') },\n      { name: 'Square Miles (mi²)', id: 'areaMI2', fn: toFixedUnit('mi²') },\n    ],\n  },\n  {\n    id: 'Computation',\n    name: ('浮点运算'),\n    formats: [\n      { name: 'FLOP/s', id: 'flops', fn: decimalSIPrefix('FLOP/s') },\n      { name: 'MFLOP/s', id: 'mflops', fn: decimalSIPrefix('FLOP/s', 2) },\n      { name: 'GFLOP/s', id: 'gflops', fn: decimalSIPrefix('FLOP/s', 3) },\n      { name: 'TFLOP/s', id: 'tflops', fn: decimalSIPrefix('FLOP/s', 4) },\n      { name: 'PFLOP/s', id: 'pflops', fn: decimalSIPrefix('FLOP/s', 5) },\n      { name: 'EFLOP/s', id: 'eflops', fn: decimalSIPrefix('FLOP/s', 6) },\n      { name: 'ZFLOP/s', id: 'zflops', fn: decimalSIPrefix('FLOP/s', 7) },\n      { name: 'YFLOP/s', id: 'yflops', fn: decimalSIPrefix('FLOP/s', 8) },\n    ],\n  },\n  {\n    id: 'Concentration',\n    name: ('浓度'),\n    formats: [\n      { name: 'parts-per-million (ppm)', id: 'ppm', fn: toFixedUnit('ppm') },\n      { name: 'parts-per-billion (ppb)', id: 'conppb', fn: toFixedUnit('ppb') },\n      { name: 'nanogram per cubic meter (ng/m³)', id: 'conngm3', fn: toFixedUnit('ng/m³') },\n      { name: 'nanogram per normal cubic meter (ng/Nm³)', id: 'conngNm3', fn: toFixedUnit('ng/Nm³') },\n      { name: 'microgram per cubic meter (μg/m³)', id: 'conμgm3', fn: toFixedUnit('μg/m³') },\n      { name: 'microgram per normal cubic meter (μg/Nm³)', id: 'conμgNm3', fn: toFixedUnit('μg/Nm³') },\n      { name: 'milligram per cubic meter (mg/m³)', id: 'conmgm3', fn: toFixedUnit('mg/m³') },\n      { name: 'milligram per normal cubic meter (mg/Nm³)', id: 'conmgNm3', fn: toFixedUnit('mg/Nm³') },\n      { name: 'gram per cubic meter (g/m³)', id: 'congm3', fn: toFixedUnit('g/m³') },\n      { name: 'gram per normal cubic meter (g/Nm³)', id: 'congNm3', fn: toFixedUnit('g/Nm³') },\n      { name: 'milligrams per decilitre (mg/dL)', id: 'conmgdL', fn: toFixedUnit('mg/dL') },\n      { name: 'millimoles per litre (mmol/L)', id: 'conmmolL', fn: toFixedUnit('mmol/L') },\n    ],\n  },\n  {\n    id: 'Currency',\n    name: ('货币'),\n    formats: [\n      { name: 'Dollars ($)', id: 'currencyUSD', fn: currency('$') },\n      { name: 'Pounds (£)', id: 'currencyGBP', fn: currency('£') },\n      { name: 'Euro (€)', id: 'currencyEUR', fn: currency('€') },\n      { name: 'Yen (¥)', id: 'currencyJPY', fn: currency('¥') },\n      { name: 'Rubles (₽)', id: 'currencyRUB', fn: currency('₽') },\n      { name: 'Hryvnias (₴)', id: 'currencyUAH', fn: currency('₴') },\n      { name: 'Real (R$)', id: 'currencyBRL', fn: currency('R$') },\n      { name: 'Danish Krone (kr)', id: 'currencyDKK', fn: currency('kr', true) },\n      { name: 'Icelandic Króna (kr)', id: 'currencyISK', fn: currency('kr', true) },\n      { name: 'Norwegian Krone (kr)', id: 'currencyNOK', fn: currency('kr', true) },\n      { name: 'Swedish Krona (kr)', id: 'currencySEK', fn: currency('kr', true) },\n      { name: 'Czech koruna (czk)', id: 'currencyCZK', fn: currency('czk') },\n      { name: 'Swiss franc (CHF)', id: 'currencyCHF', fn: currency('CHF') },\n      { name: 'Polish Złoty (PLN)', id: 'currencyPLN', fn: currency('PLN') },\n      { name: 'Bitcoin (฿)', id: 'currencyBTC', fn: currency('฿') },\n      { name: 'South African Rand (R)', id: 'currencyZAR', fn: currency('R') },\n      { name: 'Indian Rupee (₹)', id: 'currencyINR', fn: currency('₹') },\n      { name: 'South Korean Won (₩)', id: 'currencyKRW', fn: currency('₩') },\n    ],\n  },\n  {\n    id: 'Data',\n    name: ('数据'),\n    formats: [\n      { name: 'bits', id: 'bits', fn: binarySIPrefix('b') },\n      { name: 'bytes', id: 'bytes', fn: binarySIPrefix('B') },\n      { name: 'kibibytes', id: 'kbytes', fn: binarySIPrefix('B', 1) },\n      { name: 'mebibytes', id: 'mbytes', fn: binarySIPrefix('B', 2) },\n      { name: 'gibibytes', id: 'gbytes', fn: binarySIPrefix('B', 3) },\n      { name: 'tebibytes', id: 'tbytes', fn: binarySIPrefix('B', 4) },\n      { name: 'pebibytes', id: 'pbytes', fn: binarySIPrefix('B', 5) },\n    ],\n  },\n  {\n    id: 'Data',\n    name: ('数据(度量)'),\n    formats: [\n      { name: 'bits', id: 'decbits', fn: decimalSIPrefix('b') },\n      { name: 'bytes', id: 'decbytes', fn: decimalSIPrefix('B') },\n      { name: 'kilobytes', id: 'deckbytes', fn: decimalSIPrefix('B', 1) },\n      { name: 'megabytes', id: 'decmbytes', fn: decimalSIPrefix('B', 2) },\n      { name: 'gigabytes', id: 'decgbytes', fn: decimalSIPrefix('B', 3) },\n      { name: 'terabytes', id: 'dectbytes', fn: decimalSIPrefix('B', 4) },\n      { name: 'petabytes', id: 'decpbytes', fn: decimalSIPrefix('B', 5) },\n    ],\n  },\n  {\n    id: 'Data rate',\n    name: ('数据传输率'),\n    formats: [\n      { name: 'packets/sec', id: 'pps', fn: decimalSIPrefix('pps') },\n      { name: 'bits/sec', id: 'bps', fn: decimalSIPrefix('bps') },\n      { name: 'bytes/sec', id: 'Bps', fn: decimalSIPrefix('Bs') },\n      { name: 'kilobytes/sec', id: 'KBs', fn: decimalSIPrefix('Bs', 1) },\n      { name: 'kilobits/sec', id: 'Kbits', fn: decimalSIPrefix('bps', 1) },\n      { name: 'megabytes/sec', id: 'MBs', fn: decimalSIPrefix('Bs', 2) },\n      { name: 'megabits/sec', id: 'Mbits', fn: decimalSIPrefix('bps', 2) },\n      { name: 'gigabytes/sec', id: 'GBs', fn: decimalSIPrefix('Bs', 3) },\n      { name: 'gigabits/sec', id: 'Gbits', fn: decimalSIPrefix('bps', 3) },\n      { name: 'terabytes/sec', id: 'TBs', fn: decimalSIPrefix('Bs', 4) },\n      { name: 'terabits/sec', id: 'Tbits', fn: decimalSIPrefix('bps', 4) },\n      { name: 'petabytes/sec', id: 'PBs', fn: decimalSIPrefix('Bs', 5) },\n      { name: 'petabits/sec', id: 'Pbits', fn: decimalSIPrefix('bps', 5) },\n    ],\n  },\n  /* {\n    name: 'Date & Time',\n    formats: [\n      { name: 'YYYY-MM-DD HH:mm:ss', id: 'dateTimeAsIso', fn: dateTimeAsIso },\n      { name: 'MM/DD/YYYY h:mm:ss a', id: 'dateTimeAsUS', fn: dateTimeAsUS },\n      { name: 'From Now', id: 'dateTimeFromNow', fn: dateTimeFromNow },\n    ],\n  },*/\n  {\n    id: 'Energy',\n    name: ('能级'),\n    formats: [\n      { name: 'Watt (W)', id: 'watt', fn: decimalSIPrefix('W') },\n      { name: 'Kilowatt (kW)', id: 'kwatt', fn: decimalSIPrefix('W', 1) },\n      { name: 'Megawatt (MW)', id: 'megwatt', fn: decimalSIPrefix('W', 2) },\n      { name: 'Gigawatt (GW)', id: 'gwatt', fn: decimalSIPrefix('W', 3) },\n      { name: 'Milliwatt (mW)', id: 'mwatt', fn: decimalSIPrefix('W', -1) },\n      { name: 'Watt per square meter (W/m²)', id: 'Wm2', fn: toFixedUnit('W/m²') },\n      { name: 'Volt-ampere (VA)', id: 'voltamp', fn: decimalSIPrefix('VA') },\n      { name: 'Kilovolt-ampere (kVA)', id: 'kvoltamp', fn: decimalSIPrefix('VA', 1) },\n      { name: 'Volt-ampere reactive (var)', id: 'voltampreact', fn: decimalSIPrefix('var') },\n      { name: 'Kilovolt-ampere reactive (kvar)', id: 'kvoltampreact', fn: decimalSIPrefix('var', 1) },\n      { name: 'Watt-hour (Wh)', id: 'watth', fn: decimalSIPrefix('Wh') },\n      { name: 'Watt-hour per Kilogram (Wh/kg)', id: 'watthperkg', fn: decimalSIPrefix('Wh/kg') },\n      { name: 'Kilowatt-hour (kWh)', id: 'kwatth', fn: decimalSIPrefix('Wh', 1) },\n      { name: 'Kilowatt-min (kWm)', id: 'kwattm', fn: decimalSIPrefix('W-Min', 1) },\n      { name: 'Ampere-hour (Ah)', id: 'amph', fn: decimalSIPrefix('Ah') },\n      { name: 'Kiloampere-hour (kAh)', id: 'kamph', fn: decimalSIPrefix('Ah', 1) },\n      { name: 'Milliampere-hour (mAh)', id: 'mamph', fn: decimalSIPrefix('Ah', -1) },\n      { name: 'Joule (J)', id: 'joule', fn: decimalSIPrefix('J') },\n      { name: 'Electron volt (eV)', id: 'ev', fn: decimalSIPrefix('eV') },\n      { name: 'Ampere (A)', id: 'amp', fn: decimalSIPrefix('A') },\n      { name: 'Kiloampere (kA)', id: 'kamp', fn: decimalSIPrefix('A', 1) },\n      { name: 'Milliampere (mA)', id: 'mamp', fn: decimalSIPrefix('A', -1) },\n      { name: 'Volt (V)', id: 'volt', fn: decimalSIPrefix('V') },\n      { name: 'Kilovolt (kV)', id: 'kvolt', fn: decimalSIPrefix('V', 1) },\n      { name: 'Millivolt (mV)', id: 'mvolt', fn: decimalSIPrefix('V', -1) },\n      { name: 'Decibel-milliwatt (dBm)', id: 'dBm', fn: decimalSIPrefix('dBm') },\n      { name: 'Ohm (Ω)', id: 'ohm', fn: decimalSIPrefix('Ω') },\n      { name: 'Kiloohm (kΩ)', id: 'kohm', fn: decimalSIPrefix('Ω', 1) },\n      { name: 'Megaohm (MΩ)', id: 'Mohm', fn: decimalSIPrefix('Ω', 2) },\n      { name: 'Farad (F)', id: 'farad', fn: decimalSIPrefix('F') },\n      { name: 'Microfarad (µF)', id: 'µfarad', fn: decimalSIPrefix('F', -2) },\n      { name: 'Nanofarad (nF)', id: 'nfarad', fn: decimalSIPrefix('F', -3) },\n      { name: 'Picofarad (pF)', id: 'pfarad', fn: decimalSIPrefix('F', -4) },\n      { name: 'Femtofarad (fF)', id: 'ffarad', fn: decimalSIPrefix('F', -5) },\n      { name: 'Henry (H)', id: 'henry', fn: decimalSIPrefix('H') },\n      { name: 'Millihenry (mH)', id: 'mhenry', fn: decimalSIPrefix('H', -1) },\n      { name: 'Microhenry (µH)', id: 'µhenry', fn: decimalSIPrefix('H', -2) },\n      { name: 'Lumens (Lm)', id: 'lumens', fn: decimalSIPrefix('Lm') },\n    ],\n  },\n  {\n    id: 'Flow',\n    name: ('流量'),\n    formats: [\n      { name: 'Gallons/min (gpm)', id: 'flowgpm', fn: toFixedUnit('gpm') },\n      { name: 'Cubic meters/sec (cms)', id: 'flowcms', fn: toFixedUnit('cms') },\n      { name: 'Cubic feet/sec (cfs)', id: 'flowcfs', fn: toFixedUnit('cfs') },\n      { name: 'Cubic feet/min (cfm)', id: 'flowcfm', fn: toFixedUnit('cfm') },\n      { name: 'Litre/hour', id: 'litreh', fn: toFixedUnit('L/h') },\n      { name: 'Litre/min (L/min)', id: 'flowlpm', fn: toFixedUnit('L/min') },\n      { name: 'milliLitre/min (mL/min)', id: 'flowmlpm', fn: toFixedUnit('mL/min') },\n      { name: 'Lux (lx)', id: 'lux', fn: toFixedUnit('lux') },\n    ],\n  },\n  {\n    id: 'Force',\n    name: ('力'),\n    formats: [\n      { name: 'Newton-meters (Nm)', id: 'forceNm', fn: decimalSIPrefix('Nm') },\n      { name: 'Kilonewton-meters (kNm)', id: 'forcekNm', fn: decimalSIPrefix('Nm', 1) },\n      { name: 'Newtons (N)', id: 'forceN', fn: decimalSIPrefix('N') },\n      { name: 'Kilonewtons (kN)', id: 'forcekN', fn: decimalSIPrefix('N', 1) },\n    ],\n  },\n  {\n    id: 'Hash rate',\n    name: ('哈希率'),\n    formats: [\n      { name: 'hashes/sec', id: 'Hs', fn: decimalSIPrefix('H/s') },\n      { name: 'kilohashes/sec', id: 'KHs', fn: decimalSIPrefix('H/s', 1) },\n      { name: 'megahashes/sec', id: 'MHs', fn: decimalSIPrefix('H/s', 2) },\n      { name: 'gigahashes/sec', id: 'GHs', fn: decimalSIPrefix('H/s', 3) },\n      { name: 'terahashes/sec', id: 'THs', fn: decimalSIPrefix('H/s', 4) },\n      { name: 'petahashes/sec', id: 'PHs', fn: decimalSIPrefix('H/s', 5) },\n      { name: 'exahashes/sec', id: 'EHs', fn: decimalSIPrefix('H/s', 6) },\n    ],\n  },\n  {\n    id: 'Mass',\n    name: ('质量'),\n    formats: [\n      { name: 'milligram (mg)', id: 'massmg', fn: decimalSIPrefix('g', -1) },\n      { name: 'gram (g)', id: 'massg', fn: decimalSIPrefix('g') },\n      { name: 'kilogram (kg)', id: 'masskg', fn: decimalSIPrefix('g', 1) },\n      { name: 'metric ton (t)', id: 'masst', fn: toFixedUnit('t') },\n    ],\n  },\n  {\n    id: 'Length',\n    name: ('长度'),\n    formats: [\n      { name: 'millimeter (mm)', id: 'lengthmm', fn: decimalSIPrefix('m', -1) },\n      { name: 'feet (ft)', id: 'lengthft', fn: toFixedUnit('ft') },\n      { name: 'meter (m)', id: 'lengthm', fn: decimalSIPrefix('m') },\n      { name: 'kilometer (km)', id: 'lengthkm', fn: decimalSIPrefix('m', 1) },\n      { name: 'mile (mi)', id: 'lengthmi', fn: toFixedUnit('mi') },\n    ],\n  },\n  {\n    id: 'Pressure',\n    name: ('压力'),\n    formats: [\n      { name: 'Millibars', id: 'pressurembar', fn: decimalSIPrefix('bar', -1) },\n      { name: 'Bars', id: 'pressurebar', fn: decimalSIPrefix('bar') },\n      { name: 'Kilobars', id: 'pressurekbar', fn: decimalSIPrefix('bar', 1) },\n      { name: 'Hectopascals', id: 'pressurehpa', fn: toFixedUnit('hPa') },\n      { name: 'Kilopascals', id: 'pressurekpa', fn: toFixedUnit('kPa') },\n      { name: 'Inches of mercury', id: 'pressurehg', fn: toFixedUnit('\"Hg') },\n      { name: 'PSI', id: 'pressurepsi', fn: scaledUnits(1000, ['psi', 'ksi', 'Mpsi']) },\n    ],\n  },\n  {\n    id: 'Radiation',\n    name: ('辐射'),\n    formats: [\n      { name: 'Becquerel (Bq)', id: 'radbq', fn: decimalSIPrefix('Bq') },\n      { name: 'curie (Ci)', id: 'radci', fn: decimalSIPrefix('Ci') },\n      { name: 'Gray (Gy)', id: 'radgy', fn: decimalSIPrefix('Gy') },\n      { name: 'rad', id: 'radrad', fn: decimalSIPrefix('rad') },\n      { name: 'Sievert (Sv)', id: 'radsv', fn: decimalSIPrefix('Sv') },\n      { name: 'milliSievert (mSv)', id: 'radmsv', fn: decimalSIPrefix('mSv', -1) },\n      { name: 'microSievert (µSv)', id: 'radusv', fn: decimalSIPrefix('µSv', -2) },\n      { name: 'rem', id: 'radrem', fn: decimalSIPrefix('rem') },\n      { name: 'Exposure (C/kg)', id: 'radexpckg', fn: decimalSIPrefix('C/kg') },\n      { name: 'roentgen (R)', id: 'radr', fn: decimalSIPrefix('R') },\n      { name: 'Sievert/hour (Sv/h)', id: 'radsvh', fn: decimalSIPrefix('Sv/h') },\n      { name: 'milliSievert/hour (mSv/h)', id: 'radmsvh', fn: decimalSIPrefix('Sv/h', -1) },\n      { name: 'microSievert/hour (µSv/h)', id: 'radusvh', fn: decimalSIPrefix('Sv/h', -2) },\n    ],\n  },\n  {\n    id: 'Temperature',\n    name: ('温度'),\n    formats: [\n      { name: 'Celsius (°C)', id: 'celsius', fn: toFixedUnit('°C') },\n      { name: 'Fahrenheit (°F)', id: 'fahrenheit', fn: toFixedUnit('°F') },\n      { name: 'Kelvin (K)', id: 'kelvin', fn: toFixedUnit('K') },\n    ],\n  },\n  /* {\n    name: 'Time',\n    formats: [\n      { name: 'Hertz (1/s)', id: 'hertz', fn: decimalSIPrefix('Hz') },\n      { name: 'nanoseconds (ns)', id: 'ns', fn: toNanoSeconds },\n      { name: 'microseconds (µs)', id: 'µs', fn: toMicroSeconds },\n      { name: 'milliseconds (ms)', id: 'ms', fn: toMilliSeconds },\n      { name: 'seconds (s)', id: 's', fn: toSeconds },\n      { name: 'minutes (m)', id: 'm', fn: toMinutes },\n      { name: 'hours (h)', id: 'h', fn: toHours },\n      { name: 'days (d)', id: 'd', fn: toDays },\n      { name: 'duration (ms)', id: 'dtdurationms', fn: toDurationInMilliseconds },\n      { name: 'duration (s)', id: 'dtdurations', fn: toDurationInSeconds },\n      { name: 'duration (hh:mm:ss)', id: 'dthms', fn: toDurationInHoursMinutesSeconds },\n      { name: 'Timeticks (s/100)', id: 'timeticks', fn: toTimeTicks },\n      { name: 'clock (ms)', id: 'clockms', fn: toClockMilliseconds },\n      { name: 'clock (s)', id: 'clocks', fn: toClockSeconds },\n    ],\n  },*/\n  {\n    id: 'Throughput',\n    name: ('吞吐率'),\n    formats: [\n      { name: 'counts/sec (cps)', id: 'cps', fn: simpleCountUnit('cps') },\n      { name: 'ops/sec (ops)', id: 'ops', fn: simpleCountUnit('ops') },\n      { name: 'requests/sec (rps)', id: 'reqps', fn: simpleCountUnit('reqps') },\n      { name: 'reads/sec (rps)', id: 'rps', fn: simpleCountUnit('rps') },\n      { name: 'writes/sec (wps)', id: 'wps', fn: simpleCountUnit('wps') },\n      { name: 'I/O ops/sec (iops)', id: 'iops', fn: simpleCountUnit('iops') },\n      { name: 'counts/min (cpm)', id: 'cpm', fn: simpleCountUnit('cpm') },\n      { name: 'ops/min (opm)', id: 'opm', fn: simpleCountUnit('opm') },\n      { name: 'reads/min (rpm)', id: 'rpm', fn: simpleCountUnit('rpm') },\n      { name: 'writes/min (wpm)', id: 'wpm', fn: simpleCountUnit('wpm') },\n    ],\n  },\n  {\n    id: 'Velocity',\n    name: ('速度'),\n    formats: [\n      { name: 'meters/second (m/s)', id: 'velocityms', fn: toFixedUnit('m/s') },\n      { name: 'kilometers/hour (km/h)', id: 'velocitykmh', fn: toFixedUnit('km/h') },\n      { name: 'miles/hour (mph)', id: 'velocitymph', fn: toFixedUnit('mph') },\n      { name: 'knot (kn)', id: 'velocityknot', fn: toFixedUnit('kn') },\n    ],\n  },\n  {\n    id: 'Volume',\n    name: ('容量'),\n    formats: [\n      { name: 'millilitre (mL)', id: 'mlitre', fn: decimalSIPrefix('L', -1) },\n      { name: 'litre (L)', id: 'litre', fn: decimalSIPrefix('L') },\n      { name: 'cubic meter', id: 'm3', fn: toFixedUnit('m³') },\n      { name: 'Normal cubic meter', id: 'Nm3', fn: toFixedUnit('Nm³') },\n      { name: 'cubic decimeter', id: 'dm3', fn: toFixedUnit('dm³') },\n      { name: 'gallons', id: 'gallons', fn: toFixedUnit('gal') },\n    ],\n  },\n  {\n    id: 'Boolean',\n    name: ('布尔值'),\n    formats: [\n      { name: 'True / False', id: 'bool', fn: booleanValueFormatter('True', 'False') },\n      { name: 'Yes / No', id: 'bool_yes_no', fn: booleanValueFormatter('Yes', 'No') },\n      { name: 'On / Off', id: 'bool_on_off', fn: booleanValueFormatter('On', 'Off') },\n    ],\n  },\n];\n","/*\n * @Description 单位选择组件\n */\n\nimport { computed, defineComponent, PropType } from 'vue';\nimport { Cascader, Input } from 'bkui-vue';\n\nimport { getCategories } from '@/utils/formats/categories';\nimport { UnitCustom } from '@/utils/formats/valueFormats';\n\nexport default defineComponent({\n  name: 'UnitSelect',\n  props: {\n    modelValue: {\n      type: Object as PropType<UnitCustom | string>,\n      required: true,\n      default: () => ({\n        choice: ['Misc', 'short'],\n        custom: '',\n      }),\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, ctx) {\n    function processValue() {\n      let obj = null;\n      if (typeof props.modelValue === 'string') {\n        if (props.modelValue === '') {\n          obj = {\n            choice: ['Misc', 'short'],\n            custom: '',\n          };\n        } else {\n          obj = {\n            choice: ['custom'],\n            custom: props.modelValue,\n          };\n        }\n      } else {\n        obj = props.modelValue || {\n          choice: ['Misc', 'short'],\n          custom: '',\n        };\n      }\n      ctx.emit('update:modelValue', obj);\n      return obj;\n    }\n\n    const unitList = getCategories().map((item) => {\n      const { formats, id, name } = item;\n      return { id, name, children: formats };\n    });\n\n    const selectValue = computed({\n      get() {\n        return processValue();\n      },\n      set(value: UnitCustom) {\n        ctx.emit('update:modelValue', value);\n      },\n    });\n    return {\n      selectValue,\n      unitList,\n    };\n  },\n  render() {\n    const renderCustom = () => {\n      const { selectValue } = this;\n      if (Array.isArray(selectValue.choice) && selectValue.choice.includes('custom')) {\n        return (\n          <div style={{ minWidth: '50%', width: '100%' }}>\n            <Input v-model={selectValue.custom} placeholder={'请输入单位'}/>\n          </div>\n        );\n      }\n      return null;\n    };\n    return (\n      <div class={'flex-row'}>\n        <Cascader\n          style={{ minWidth: '50%', width: '100%' }}\n          v-model={this.selectValue.choice}\n          list={this.unitList}\n          clearable={true}\n        />\n        {renderCustom()}\n      </div>\n    );\n  },\n});\n","import { Button } from 'bkui-vue';\n\n\nimport { Canvas, Meta, Story } from '@storybook/addon-docs';\n\nimport UnitSelect from '../components/unit-select';\n\n<Meta\n  title=\"Example/UnitSelect\"\n  argTypes={{\n    modelValue: {\n      type: { name: 'object', required: true },\n      defaultValue: {\n        choice: ['Misc', 'short'],\n        custom: '',\n      },\n      control: 'object',\n    },\n  }}\n  component={UnitSelect}\n/>\n\nexport const Template = (args) => ({\n  components: { UnitSelect },\n  setup() {\n    return { args };\n  },\n  template: '<UnitSelect v-bind=\"args\" />',\n});\n\n# UnitSelect\n\n默认使用\n\n<Story\n  name=\"Primary\"\n  args={{\n    modelValue: '',\n  }}>\n  {Template.bind({})}\n</Story>\n\n\n\n"],"names":["currency","symbol","asSuffix","scaler","scaledUnits","size","decimals","scaledDecimals","scaled","binarySIPrefix","unit","offset","units","p","decimalSIPrefix","prefixes","booleanValueFormatter","t","f","value","toFixed","factor","formatted","decimalPos","precision","toFixedUnit","asPrefix","text","extArray","steps","limit","locale","simpleCountUnit","v","toPercent","toPercentUnit","toHex0x","asHex","toHex","sci","getCategories","defineComponent","name","props","modelValue","type","Object","required","default","choice","custom","emits","setup","ctx","processValue","obj","emit","unitList","map","item","formats","id","children","selectValue","computed","get","set","render","renderCustom","Array","isArray","includes","_createVNode","minWidth","width","Input","$event","Cascader","Template","args","UnitSelect","_createMdxContent","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Story","MDXContent","MDXLayout","primary","componentMeta","__namedExportsOrder"],"mappings":"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"}